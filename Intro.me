Ice Hockey Player Database

1. **Requirement Analysis** #What do you want to accomplish + What's the problem you want to solve
    - League and player databases are not really available online in Asia
    - Or if available, not good/mixed with other things/hard to find
    - Database for Asian leagues (Univ. leagues, Rec leagues, Top/Pro leagues)
    - The database should be easily accessible
    - You should be able to view the thing from any device
    - Should also be free/affordable

2. **System Design** #System logic
    - Data comes from organizer/reporter/anyone that works with the leagues
    - data is sent in csv file? maybe template is used
    - csv data is read and put into database
    - update database
    - display the data

3. **Implementation** #Break up the system into components + What you're going to use
    - Server side --Authentication
    - Access database (JWT Auth)
    - Connect database to Server (Node.js, PostgreSQL)
    - Server send data to db, db updates
    - db sends new data to server, send to frontend
    - Client side --Show
    - get new data from special account (API)
    - send data to backend
    - get new data from backend
    - shows new data (React, Tailwind CSS)
    - Version Control (gitHub, git)

4. **Integration and Testing** #How you going to combine everything
    - frontend Testing (Jest/Mocha)
    - backend Testing (Mocha)
    - Integration Testing (Postman, Node.js)
    - End-to-end Testing (Cypress/Selenium)
    - API Testing
    - Performance Testing (JMeter)
    - Security Assessment

5. **Deployment** #How you going to deploy
    - frontend Hosting (Vercel, Netlify)
    - backend Hosting (Heroku, DigitalOcean, AWS)
    - db Hosting (AWS RDS, MongoDB Atlas)

## Advantages #Why do this project
- Learning project
- Make a fullstack app
- Maybe learn devops at the end
- If turns out well, can sell to MIHF ++

## Difficulties #What is difficulty that you will face
- Testing
- API using
- Authentication
- Time limit

## Target Audience #Who will probably most want to use product
- MIHF
- WWIHL
- Japan Univ. leagues
- Korea Univ. leagues

## Patch Update #Be AMBITIOUS!
- Data visualization
- Head to head data comparison b/w players/teams
- Communication b/w team managers/league organizers

Directory Structure

/client               # Frontend (React app)
│   ├── /public           # Public assets
│   ├── /src              # Source files
│   │   ├── /components   # React components
│   │   ├── /hooks        # Custom hooks
│   │   ├── /pages        # Page components
│   │   ├── /styles       # CSS/Sass files
│   │   ├── App.js        # Main App component
│   │   └── index.js      # Entry point
│   ├── package.json       # Frontend dependencies
│   └── .env              # Environment variables for frontend
│
├── /server               # Backend (Node.js/Express app)
│   ├── /config           # Configuration files (database, middleware, etc.)
│   ├── /controllers      # Request handlers
│   ├── /middlewares      # Custom middleware
│   ├── /models           # Database models (if using an ORM)
│   ├── /routes           # API routes
│   ├── /utils            # Utility functions
│   ├── server.js         # Entry point for the backend
│   ├── package.json       # Backend dependencies
│   └── .env              # Environment variables for backend
│
├── /scripts              # Scripts for build, deployment, etc.
├── /docker               # Docker files (if using Docker)
├── /tests                # Test files
│
├── .gitignore            # Files to ignore in Git
└── README.md             # Documentation